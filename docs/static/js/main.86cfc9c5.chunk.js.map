{"version":3,"sources":["components/AddCategory.js","helpers/GetGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","res","json","data","gift","map","img","id","title","images","downsized_medium","GiftGridItem","src","alt","GiftGrid","loading","state","setState","useEffect","then","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBAAOO,UAAU,eACbC,KAAK,OACLC,MAAQV,EACRW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCRlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGFI,MAAOF,GAHL,cAGdG,EAHc,gBAICA,EAAIC,OAJL,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCERO,EAAe,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,mCACI,sBAAKR,UAAU,yCAAf,UACI,qBAAKsB,IAAKd,EAAKe,IAAKL,IAEpB,4BAAIA,UCLPM,EAAW,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEff,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAXAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAb,GAEHW,EAAS,CACLd,KAAMG,EACNS,SAAS,SAGtB,CAACnB,IAEGoB,EDhB0BI,CAAcxB,GAAjCa,EAFwB,EAE9BN,KAAcY,EAFgB,EAEhBA,QAGtB,OACI,qCACI,oBAAIzB,UAAU,oCAAd,SAAoDM,IAEhDmB,GAAW,mBAAGzB,UAAU,mCAAb,wBAEf,qBAAKA,UAAU,YAAf,SAEImB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEdrBc,EAAgB,WAAO,IAAD,EAEKxC,mBAAS,CAAC,cAFf,mBAExByC,EAFwB,KAEZ1C,EAFY,KAK/B,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ0C,EAAWjB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCdlC2B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.86cfc9c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');            \n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input className=\"form-control\"\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n","export const getGifts = async( category ) => {\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=YRDES9Pyatun3I2kXQpKgtAeM1qhwkjo`;\n    const res = await fetch( url );\n    const {data} = await res.json();\n\n    const gift = data.map( img => {\n        return {\n            id : img.id,\n            title : img.title,\n            url : img.images?.downsized_medium.url\n        }\n    })\n\n    return gift;\n}","import React, { Fragment } from 'react'\n\nexport const GiftGridItem = ({ id, title, url }) => {\n\n    return (\n        <>\n            <div className=\"card animate__animated animate__fadeIn\">\n                <img src={url} alt={title} />\n                \n                <p>{title}</p>\n                \n            </div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifts'\nimport { GiftGridItem } from './GiftGridItem';\n\nexport const GiftGrid = ({ category }) => {\n\n    const { data: images, loading} = useFetchGifts(category);\n    \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            {\n                loading && <p className=\"animate__animated animate__flash\">Loading...</p>\n            }\n            <div className=\"card-grid\">\n            {\n                images.map( img => (\n                    <GiftGridItem\n                        key={ img.id }\n                        { ...img } \n                    />\n                ))\n            }\n            </div>\n\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport {getGifts} from '../helpers/GetGifts';\n\n\nexport const useFetchGifts = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifts(category)\n            .then( img => {\n\n                setState({\n                    data: img,\n                    loading: false\n                });\n            })\n    }, [category])\n\n    return state; // { data: [], loading: true }\n}","\nimport React, { useState } from 'react'\nimport { AddCategory } from './AddCategory';\nimport { GiftGrid } from './GiftGrid';\n\nexport const GiftExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    \n    return (\n        <>\n            <h2>Gift Expert App</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n        \n            <ol>\n                {\n                    categories.map( category => (\n                        <GiftGrid\n                            key={ category }  \n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GiftExpertApp} from './components/GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}